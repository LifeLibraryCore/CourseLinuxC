	.file	"task_m2t2p3.c"
	.section	.rodata
.LC0:
	.string	"rus"
	.align 8
.LC1:
	.string	"\320\227\320\260\320\264\320\260\320\275\320\270\320\265 1. \320\232\320\260\320\273\321\214\320\272\321\203\320\273\321\217\321\202\320\276\321\200."
	.align 8
.LC2:
	.string	"\320\237\321\200\320\270\320\274\320\265\321\200 \320\262\320\262\320\276\320\264\320\260: a \"\320\267\320\275\320\260\320\272\" b, \320\263\320\264\320\265:\n\ta \320\270 b - \321\207\320\270\321\201\320\273\320\260;\n\t\"\320\267\320\275\320\260\320\272\" - \320\274\320\260\321\202\320\265\320\274\320\260\321\202\320\270\321\207\320\265\321\201\320\272\320\270\320\271 \320\267\320\275\320\260\320\272: +, -, *, /;"
	.align 8
.LC4:
	.string	"\320\224\320\273\320\270\320\275\320\275\320\260 \320\274\320\260\321\201\321\201\320\270\320\262\320\260 \320\275\320\260 \321\204\321\203\320\275\320\272\321\206\320\270\320\270: %d\n"
.LC5:
	.string	"\320\222\320\262\320\276\320\264: "
.LC6:
	.string	"%lf %c %lf"
.LC7:
	.string	"\320\236\321\210\320\270\320\261\320\272\320\260 \320\262\320\262\320\276\320\264\320\260!"
	.align 8
.LC8:
	.string	"\320\236\321\210\320\270\320\261\320\272\320\260 \320\262\320\262\320\276\320\264\320\260 \320\267\320\275\320\260\320\272\320\260! \320\222\321\213\321\205\320\276\320\264 \320\270\320\267 \320\277\321\200\320\276\320\263\321\200\320\260\320\274\320\274\321\213!"
.LC9:
	.string	"\n%lf %c %lf = %lf\n"
	.text
	.globl	main
	.type	main, @function
main:
.LFB0:
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	subq	$96, %rsp
	leaq	.LC0(%rip), %rsi
	movl	$6, %edi
	call	setlocale@PLT
	leaq	.LC1(%rip), %rdi
	call	puts@PLT
	leaq	.LC2(%rip), %rdi
	call	puts@PLT
	movb	$32, -17(%rbp)
	pxor	%xmm0, %xmm0
	movsd	%xmm0, -32(%rbp)
	pxor	%xmm0, %xmm0
	movsd	%xmm0, -40(%rbp)
	pxor	%xmm0, %xmm0
	movsd	%xmm0, -8(%rbp)
	leaq	sum(%rip), %rax
	movq	%rax, -80(%rbp)
	leaq	difference(%rip), %rax
	movq	%rax, -72(%rbp)
	leaq	product(%rip), %rax
	movq	%rax, -64(%rbp)
	leaq	relation(%rip), %rax
	movq	%rax, -56(%rbp)
	movl	$4, -16(%rbp)
	movl	-16(%rbp), %eax
	movl	%eax, %esi
	leaq	.LC4(%rip), %rdi
	movl	$0, %eax
	call	printf@PLT
.L9:
	leaq	.LC5(%rip), %rdi
	movl	$0, %eax
	call	printf@PLT
	leaq	-40(%rbp), %rcx
	leaq	-17(%rbp), %rdx
	leaq	-32(%rbp), %rax
	movq	%rax, %rsi
	leaq	.LC6(%rip), %rdi
	movl	$0, %eax
	call	__isoc99_scanf@PLT
	testl	%eax, %eax
	jne	.L2
	leaq	.LC7(%rip), %rdi
	call	puts@PLT
	movl	$1, %eax
	jmp	.L10
.L2:
	movzbl	-17(%rbp), %eax
	cmpb	$43, %al
	je	.L4
	movzbl	-17(%rbp), %eax
	cmpb	$45, %al
	je	.L4
	movzbl	-17(%rbp), %eax
	cmpb	$42, %al
	je	.L4
	movzbl	-17(%rbp), %eax
	cmpb	$47, %al
	je	.L4
	leaq	.LC8(%rip), %rdi
	call	puts@PLT
	movl	$0, %eax
	jmp	.L10
.L4:
	pxor	%xmm0, %xmm0
	movsd	%xmm0, -8(%rbp)
	movl	$0, -12(%rbp)
	jmp	.L5
.L7:
	movl	-12(%rbp), %eax
	cltq
	movq	-80(%rbp,%rax,8), %rax
	movsd	-40(%rbp), %xmm0
	movzbl	-17(%rbp), %edx
	movsbl	%dl, %ecx
	movq	-32(%rbp), %rdx
	movapd	%xmm0, %xmm1
	movl	%ecx, %edi
	movq	%rdx, -88(%rbp)
	movsd	-88(%rbp), %xmm0
	call	*%rax
	movq	%xmm0, %rax
	movq	%rax, -8(%rbp)
	addl	$1, -12(%rbp)
.L5:
	movl	-12(%rbp), %eax
	cmpl	-16(%rbp), %eax
	jge	.L6
	pxor	%xmm0, %xmm0
	ucomisd	-8(%rbp), %xmm0
	jp	.L6
	pxor	%xmm0, %xmm0
	ucomisd	-8(%rbp), %xmm0
	je	.L7
.L6:
	movsd	-40(%rbp), %xmm0
	movzbl	-17(%rbp), %eax
	movsbl	%al, %edx
	movq	-32(%rbp), %rax
	movsd	-8(%rbp), %xmm1
	movapd	%xmm1, %xmm2
	movapd	%xmm0, %xmm1
	movl	%edx, %esi
	movq	%rax, -88(%rbp)
	movsd	-88(%rbp), %xmm0
	leaq	.LC9(%rip), %rdi
	movl	$3, %eax
	call	printf@PLT
	jmp	.L9
.L10:
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE0:
	.size	main, .-main
	.globl	sum
	.type	sum, @function
sum:
.LFB1:
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	movsd	%xmm0, -8(%rbp)
	movl	%edi, %eax
	movsd	%xmm1, -24(%rbp)
	movb	%al, -12(%rbp)
	cmpb	$43, -12(%rbp)
	jne	.L12
	movsd	-8(%rbp), %xmm0
	addsd	-24(%rbp), %xmm0
	jmp	.L13
.L12:
	pxor	%xmm0, %xmm0
.L13:
	popq	%rbp
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE1:
	.size	sum, .-sum
	.globl	difference
	.type	difference, @function
difference:
.LFB2:
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	movsd	%xmm0, -8(%rbp)
	movl	%edi, %eax
	movsd	%xmm1, -24(%rbp)
	movb	%al, -12(%rbp)
	cmpb	$45, -12(%rbp)
	jne	.L15
	movsd	-8(%rbp), %xmm0
	subsd	-24(%rbp), %xmm0
	jmp	.L16
.L15:
	pxor	%xmm0, %xmm0
.L16:
	popq	%rbp
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE2:
	.size	difference, .-difference
	.globl	product
	.type	product, @function
product:
.LFB3:
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	movsd	%xmm0, -8(%rbp)
	movl	%edi, %eax
	movsd	%xmm1, -24(%rbp)
	movb	%al, -12(%rbp)
	cmpb	$42, -12(%rbp)
	jne	.L18
	movsd	-8(%rbp), %xmm0
	mulsd	-24(%rbp), %xmm0
	jmp	.L19
.L18:
	pxor	%xmm0, %xmm0
.L19:
	popq	%rbp
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE3:
	.size	product, .-product
	.globl	relation
	.type	relation, @function
relation:
.LFB4:
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	movsd	%xmm0, -8(%rbp)
	movl	%edi, %eax
	movsd	%xmm1, -24(%rbp)
	movb	%al, -12(%rbp)
	cmpb	$47, -12(%rbp)
	jne	.L21
	movsd	-8(%rbp), %xmm0
	divsd	-24(%rbp), %xmm0
	jmp	.L22
.L21:
	pxor	%xmm0, %xmm0
.L22:
	popq	%rbp
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE4:
	.size	relation, .-relation
	.ident	"GCC: (Debian 6.3.0-18+deb9u1) 6.3.0 20170516"
	.section	.note.GNU-stack,"",@progbits
